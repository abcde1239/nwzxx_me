name: Vue CI/CD with Docker

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: nwzxx-me
      IMAGE_TAG: latest
      CONTAINER_NAME: nwzxx-me-container

    steps:
      # 1. Checkout 代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18"

      # 3. 安装依赖 & 构建 Vue
      - name: Install dependencies
        run: npm ci

      - name: Build Vue app
        run: npm run build

      # 4. 构建 Docker 镜像
      - name: Build Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          echo "Docker image built: $IMAGE_NAME:$IMAGE_TAG"

      # 5. 保存 Docker 镜像为 tar 文件，并验证生成
      - name: Save Docker image
        run: |
          docker save $IMAGE_NAME:$IMAGE_TAG -o $IMAGE_NAME.tar
          ls -lh $IMAGE_NAME.tar

      # 6. 上传 Docker 镜像到服务器
      - name: Copy Docker image to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: nwzxx-me.tar
          target: ~/nwzxx-me.tar

      # 7. 在服务器上加载并运行 Docker 镜像
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            docker load -i ~/nwzxx-me.tar
            docker stop $CONTAINER_NAME || true
            docker rm $CONTAINER_NAME || true
            docker run -d --name $CONTAINER_NAME -p 80:80 $IMAGE_NAME:$IMAGE_TAG
