name: Deploy nwzxx-me

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 拉取代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. 安装 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3. 安装依赖并构建 Vue 项目
      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      # 4. 构建 Docker 镜像
      - name: Build Docker image
        run: docker build -t nwzxx-me:latest .

      # 5. 保存镜像为 tar 文件
      - name: Save Docker image
        run: |
          docker save -o nwzxx-me.tar nwzxx-me:latest
          chmod 644 nwzxx-me.tar

      # 6. 上传镜像文件到服务器（开启覆盖）
      - name: Upload image to server
        uses: appleboy/scp-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "./nwzxx-me.tar"
          target: "/home/${{ secrets.SERVER_USER }}/" # 绝对路径
          overwrite: true # ⚡ 开启覆盖
          timeout: 600s
          command_timeout: 600s
          debug: true

      # 7. SSH 登录服务器，清理旧文件并加载镜像运行容器
      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            # ⚡ 清理旧文件和容器
            rm -rf /home/${{ secrets.SERVER_USER }}/nwzxx-me*
            docker stop nwzxx-me-container || true
            docker rm nwzxx-me-container || true

            # 加载新镜像并启动容器
            docker load -i /home/${{ secrets.SERVER_USER }}/nwzxx-me.tar
            docker run -d --name nwzxx-me-container -p 3000:80 nwzxx-me:latest

            # 删除 tar 文件，节省空间
            rm -f /home/${{ secrets.SERVER_USER }}/nwzxx-me.tar
