name: CI/CD Docker Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 拉取仓库代码
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ 安装 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      # 3️⃣ 安装项目依赖，包括 @types/aos
      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev @types/aos

      # 4️⃣ 构建前端项目
      - name: Build project
        run: |
          npm run build

      # 5️⃣ 打包 Docker 镜像到 tar 文件
      - name: Save Docker base image
        run: |
          docker pull nginx:stable-alpine
          docker save nginx:stable-alpine | gzip > nginx-stable-alpine.tar.gz

      # 6️⃣ 上传项目与 Docker 镜像到服务器
      - name: Upload project and Docker image
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: |
            ./dist
            ./Dockerfile
            ./nginx-stable-alpine.tar.gz
          target: /home/${{ secrets.SERVER_USER }}/nwzxx-me

      # 7️⃣ SSH 到服务器执行部署
      - name: Deploy on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/nwzxx-me

            # 如果 nginx 镜像不存在，加载本地 tar 包
            if ! docker images | grep -q "nginx.*stable-alpine"; then
              docker load < nginx-stable-alpine.tar.gz
            fi

            # 构建 Docker 镜像
            docker build -t nwzxx-me .

            # 停掉旧容器
            docker stop nwzxx-me-container || true
            docker rm nwzxx-me-container || true

            # 启动新容器
            docker run -d --name nwzxx-me-container -p 3000:80 nwzxx-me

            echo "✅ 部署完成！"
